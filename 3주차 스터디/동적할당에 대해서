동적할당 : 프로그램 실행 중에 메모리 공간을 할당하는 것. 사용자가 능동적으로 메모리를 할당,해제할 수 있다.

스택 : 지역변수와 함수호출에 사용. 
위에서 부터 채워지며, 호출된뒤 가장 최근의 데이터부터 제거됨.
컴파일 시점에서 메모리 공간이 할당

힙 : 메모리의 나머지 부분을 차지. 
사용자가 동적으로 사용할 수 있는 메모리임.
사용자가 자동으로 해제해야됨.
메모리 누수 : 해당 메모리를 더 이상 사용하지 않는데 계속 남아있는 것.
free(),RAII등을 사용하여 해제가능
프로그램 실행 중에 할당됨.
동적할당은 힙영역을 사용한다.
--------------------------------------------------------------------------------------------
c에서 배열의 길이를 정해줘야 하는 이유
1.메모리 할당:배열은 연속된 메모리 공간에 데이터 요소를 저장.
2.인덱싱 : 배열 요소는 인덱스를 사용하여 접근하는데 크기를 알 수 없으면 컴파일러가 처리할 수 없음.
3.경계 검사 : 배열의 요소를 인덱싱할 때 배열의 경계를 벗어나는지 검사하는데 이는 배열 요소에 접근을 안전하게 함.
== 배열길이를 정하지 않으면 실행시 컴파일러가 읽을 수 없어 오류가 나게 된다.

---------------------------------------------------------------------------------------------
동적할당 사용법(실행 시간에 메모리를 할당하므로 문제X)

malloc()함수

ex)
int* ptr=(int*)malloc(5*sizeof(int));

(5*sizeof(int)) : sizeof(int)는 int형의 크기 즉 4byte를 의미하고, 데이터 5개를 사용하므로 총 20byte를 사용한다고 알리고 있다.
(int*) : 위에서 할당한 메모리의 주소를 int형 포인터로 반환함.
int* ptr= 포인터 변수 ptr은 malloc에서 할당된 int*형 메모리를 가르킨다.

이때 5에 해당하는 부분에 변수를 사용해도된다. 다만 변수의 값은 malloc함수 이전에 결정되야 한다.
malloc()함수는 할당된 메모리 블록의 시작 주소를 반환한다.
이때 반환값이 어떤 자료형인지는 모르므로 void*형을 반환한다.(캐스팅을 통해 바꾸어 사용)

