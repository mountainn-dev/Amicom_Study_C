함수는 다음과 같이 선언한다.

(반환할 자료형) 함수이름(매개변수)
{
  함수 실행 코드(입력값을 출력값으로 가공)
}

따라서 main()함수는 다음과 같이 이해할 수 있다.
int main(void){}

int : 정수로 반환함
main : 함수 이름
void : 매개변수로 void를 가짐.(인수를 전달할 필요가 없다)
int로 반환하고 void를 매개변수로 가지는 이유는 ansi c 표준에 규제되어있다.

void의 경우 프로그램이 시작될때 명령행 인수의 수와 값이 전달되는데
명령행 인수를 전달하지 않는 경우에는 void를 사용한다.
따라서 main()함수는 다음과 같이 정의할 수도 있다.
int main(int argc, char *argv[]); 이때 argc는 명령행 인수의 개수, argv는 명령행 인수를 저장하는 문자열 배열이다.
void는 argv[0]을 의미하는데, 이 배열 한 칸에는 실행 파일의 이름이 들어가게 된다. 따라서 실행 파일의 이름을 제외한
다른 명령 인수를 사용하지 않는 경우에는 void를 사용한다.
argv[]의 길이는 argc에 의해 결정된다.

int의 경우 main함수의 반환 값은 프로그램의 종료상태를 알려주는데
이때 정상종료인 경우 0을, 비정상 종료의 경우 나머지 수를 사용한다.따라서 int형을 사용한다.

*명령행 인수:프로그램이 실행될 때, 프로그램에게 전달되는 인자.
ex)실행 파일 이름, 동작을 제어하기 위한 옵션 등


main()함수는 코드에 정의 하고 호출하지 않을까?
- 프로그램을 실행하는 순간 운영체제가 메인함수를 호출하기 때문이다.
 즉 프로그램이 실행되는 이유는 운영체제가 main함수를 호출하는 것으로 볼 수 있다.
